---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
  name: appmesh-demo
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: Mesh
metadata:
  name: appmesh-demo
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: dj
  namespace: appmesh-demo
spec:
  meshName: appmesh-demo
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    cloudMap:
      namespaceName: appmesh-demo.pvt.aws.local
      serviceName: dj
  backends:
    - virtualService:
        virtualServiceName: metal.appmesh-demo.pvt.aws.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: metal-v1
  namespace: appmesh-demo
spec:
  meshName: appmesh-demo
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    cloudMap:
      namespaceName: appmesh-demo.pvt.aws.local
      serviceName: metal
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: metal-v2
  namespace: appmesh-demo
spec:
  meshName: appmesh-demo
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    cloudMap:
      namespaceName: appmesh-demo.pvt.aws.local
      serviceName: metal
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualService
metadata:
  name: metal.appmesh-demo.pvt.aws.local
  namespace: appmesh-demo
spec:
  meshName: appmesh-demo
  virtualRouter:
    name: metal-router
    listeners:
      - portMapping:
          port: 9080
          protocol: http
  routes:
    - name: metal-route
      http:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeName: metal-v1
              weight: 10
            - virtualNodeName: metal-v2
              weight: 90

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metal-v1
  namespace: appmesh-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metal
      version: v1
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: appmesh-demo
      labels:
        app: metal
        version: v1
    spec:
      containers:
        - name: metal
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "[\"Megadeth\",\"Judas Priest\"]"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metal-v2
  namespace: appmesh-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metal
      version: v2
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: appmesh-demo
      labels:
        app: metal
        version: v2
    spec:
      containers:
        - name: metal
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "[\"Megadeth (Los Angeles, California)\",\"Judas Priest (West Bromwich, England)\"]"
